/*** © 2022 Ueno ***/
{
  "container_light_text_button@light_text_button": {
    "$button_state_panel|default": "common_buttons.new_ui_button_panel",
    "$button_state_panel_hover|default": "common_buttons.new_ui_button_panel",
    "controls": [
      {
        "default@$button_state_panel": {
          "$new_ui_button_texture": "$default_button_texture",
          "$text_color": "$default_text_color",
          "$secondary_text_color": "$light_button_secondary_default_text_color",
          "$content_alpha": "$default_content_alpha",
          "$border_color": "$light_border_default_color",
          "$border_layer": 2,
          "$default_state": true,
          "$button_alpha": "$default_button_alpha",
          "layer": 1
        }
      },
      {
        "hover@$button_state_panel_hover": {
          "$new_ui_button_texture": "$hover_button_texture",
          "$text_color": "$hover_text_color",
          "$secondary_text_color": "$light_button_secondary_hover_text_color",
          "$content_alpha": 1,
          "$border_color": "$light_border_hover_color",
          "$border_layer": 4,
          "$hover_state": true,
          "$button_alpha": "$default_hover_alpha",
          "layer": 4 // This is several layers higher than default in case two buttons share a border and that shared border needs to turn with with either button hover/press state
        }
      },
      {
        "pressed@$button_state_panel_hover": {
          "$new_ui_button_texture": "$pressed_button_texture",
          "$text_color": "$pressed_text_color",
          "$secondary_text_color": "$light_button_secondary_pressed_text_color",
          "$button_offset|default": "$button_pressed_offset",
          "$content_alpha": "$pressed_alpha",
          "$border_color": "$light_border_pressed_color",
          "$border_layer": 5,
          "$pressed_state": true,
          "$button_alpha": "$default_pressed_alpha",
          "layer": 5
        }
      },
      {
        "locked@$button_state_panel": {
          "$new_ui_button_texture": "$locked_button_texture",
          "$text_color": "$locked_text_color",
          "$secondary_text_color": "$light_button_secondary_locked_text_color",
          "$content_alpha": "$locked_alpha",
          "$border_color": "$light_border_locked_color",
          "$button_image": "common_buttons.locked_button_image",
          "$border_layer": 1,
          "$locked_state": true,
          "layer": 1
        }
      },
      {
        "items": {
          "type": "panel",
          "layer": 23,
          "$index": 1,
          "size": [18, "100%x"],
          "controls": [
            {
              "item_renderer": {
                "type": "custom",
                "renderer": "inventory_item_renderer",
                "size": [16, 16],
                "bindings": [
                  {
                    "binding_name": "#form_button_text",
                    "binding_name_override": "#text",
                    "binding_type": "collection",
                    "binding_collection_name": "form_buttons"
                  },
                  {
                    "binding_type": "view",
                    "source_property_name": "((('%.' + $header_size + 's') * #text) - 'Õ')",
                    "target_property_name": "#content_length"
                  },
                  {
                    "binding_type": "view",
                    "source_property_name": "(('%.' + #content_length + 's') * #text)",
                    "target_property_name": "#content"
                  },
                  {
                    "binding_type": "view",
                    "source_property_name": "(#text - #content)",
                    "target_property_name": "#element_length"
                  },
                  {
                    "binding_type": "view",
                    "source_property_name": "((((('%.' + (($index + 1) * #element_length) + 's') * #content) - (('%.' + ($index * #element_length) + 's') * #content)) - $ignored_2) - $ignored_3)",
                    "target_property_name": "#item_id_aux"
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "item_stack_size_text": {
          "type": "label",
          "text": "#item_count",
          "font_type":"unicode",
          "shadow": true,
          "color": "$selected_item_stack_count_color",
          "offset": [0, 1],
          "anchor_to": "bottom_right",
          "anchor_from": "bottom_right",
          "layer": 27,
          "$index": 2,
          "bindings": [
            {
              "binding_name": "#form_button_text",
              "binding_name_override": "#text",
              "binding_type": "collection",
              "binding_collection_name": "form_buttons"
            },
            {
              "binding_type": "view",
              "source_property_name": "((('%.' + $header_size + 's') * #text) - 'Õ')",
              "target_property_name": "#content_length"
            },
            {
              "binding_type": "view",
              "source_property_name": "(('%.' + #content_length + 's') * #text)",
              "target_property_name": "#content"
            },
            {
              "binding_type": "view",
              "source_property_name": "(#text - #content)",
              "target_property_name": "#element_length"
            },
            {
              "binding_type": "view",
              "source_property_name": "((((('%.' + (($index + 1) * #element_length) + 's') * #content) - (('%.' + ($index * #element_length) + 's') * #content)) - $ignored_2) - $ignored_3)",
              "target_property_name": "#item_count"
            }
          ]
        }
      }
    ]
  },
  "new_ui_button_panel_with_hover_text@new_ui_button_panel": {
    "$hover_text|default": "",
    "controls": [
      {
        "$button_image@$button_image": {
          "ignored": "(not $button_image_visible)",
          "size": "$button_image_size",
          "offset": "$image_offset",
          "anchor_from": "$image_anchor",
          "anchor_to": "$image_anchor",
          "layer": 1,
          "fill": "$button_image_fill",
          "color": "$button_image_color"
        }
      },
      {
        "button_content": {
          "type": "panel",
          "$button_content_size|default": ["100% - 6px", "100% - 6px"],
          "size": "$button_content_size",
          "controls": [
            {
              "$button_type_panel@$button_type_panel": {
                "layer": 3
              }
            }
          ]
        }
      },
      {
        "border@common_buttons.focus_border": {
          "color": "$border_color",
          "layer": "$border_layer",
          "alpha": "$border_alpha",
          "ignored": "(not $border_visible)"
        }
      },
      {
        "hover_text@common.hover_text": {
          "layer": 29,
          "$index": 3,
          "bindings": [
            {
              "binding_name": "#form_button_text",
              "binding_name_override": "#text",
              "binding_type": "collection",
              "binding_collection_name": "form_buttons"
            },
            {
              "binding_type": "view",
              "source_property_name": "((('%.' + $header_size + 's') * #text) - 'Õ')",
              "target_property_name": "#content_length"
            },
            {
              "binding_type": "view",
              "source_property_name": "(('%.' + #content_length + 's') * #text)",
              "target_property_name": "#content"
            },
            {
              "binding_type": "view",
              "source_property_name": "(#text - #content)",
              "target_property_name": "#element_length"
            },
            {
              "binding_type": "view",
              "source_property_name": "((((('%.' + (($index + 1) * #element_length) + 's') * #content) - (('%.' + ($index * #element_length) + 's') * #content)) - $ignored_2) - $ignored_3)",
              "target_property_name": "#hover_text"
            }
          ]
        }
      }
    ]
  },
  "new_ui_button_panel_test@new_ui_button_panel": {
    "controls": [
      {
        "$button_image@$button_image": {
          "ignored": "(not $button_image_visible)",
          "size": "$button_image_size",
          "offset": "$image_offset",
          "anchor_from": "$image_anchor",
          "anchor_to": "$image_anchor",
          "layer": 1,
          "fill": "$button_image_fill",
          "color": "$button_image_color"
        }
      },
      {
        "button_content": {
          "type": "panel",
          "$button_content_size|default": ["100% - 6px", "100% - 6px"],
          "size": "$button_content_size",
          "controls": [
            {
              "$button_type_panel@$button_type_panel": {
                "layer": 3
              }
            }
          ]
        }
      },
      {
        "border@common_buttons.focus_border": {
          "color": "$border_color",
          "layer": "$border_layer",
          "alpha": "$border_alpha",
          "ignored": true
        }
      }
    ]
  },
  "kit_light_text_button@light_text_button": {
    "$kit_border_hover_color":[0,0,0],
    "controls": [
      {
        "default@$button_state_panel": {
          "$new_ui_button_texture": "$default_button_texture",
          "$text_color": "$default_text_color",
          "$secondary_text_color": "$light_button_secondary_default_text_color",
          "$content_alpha": "$default_content_alpha",
          "$border_color": "$light_border_default_color",
          "$border_layer": 2,
          "$default_state": true,
          "$button_alpha": "$default_button_alpha",
          "layer": 1
        }
      },
      {
        "hover@$button_state_panel": {
          "$new_ui_button_texture": "$hover_button_texture",
          "$text_color": "$hover_text_color",
          "$secondary_text_color": "$light_button_secondary_hover_text_color",
          "$content_alpha": 1,
          "$border_color": "$kit_border_hover_color",
          "$border_layer": 4,
          "$hover_state": true,
          "$button_alpha": "$default_hover_alpha",
          "layer": 4 // This is several layers higher than default in case two buttons share a border and that shared border needs to turn with with either button hover/press state
        }
      },
      {
        "pressed@$button_state_panel": {
          "$new_ui_button_texture": "$pressed_button_texture",
          "$text_color": "$pressed_text_color",
          "$secondary_text_color": "$light_button_secondary_pressed_text_color",
          "$button_offset|default": "$button_pressed_offset",
          "$content_alpha": "$pressed_alpha",
          "$border_color": "$kit_border_hover_color",
          "$border_layer": 5,
          "$pressed_state": true,
          "$button_alpha": "$default_pressed_alpha",
          "layer": 5
        }
      },
      {
        "locked@$button_state_panel": {
          "$new_ui_button_texture": "$locked_button_texture",
          "$text_color": "$locked_text_color",
          "$secondary_text_color": "$light_button_secondary_locked_text_color",
          "$content_alpha": "$locked_alpha",
          "$border_color": "$light_border_locked_color",
          "$button_image": "common_buttons.locked_button_image",
          "$border_layer": 1,
          "$locked_state": true,
          "layer": 1
        }
      }
    ]
  }
}
